{"version":3,"file":"PatchWidget.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/ai_assistance/PatchWidget.test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,MAAM,MAAM,6BAA6B,CAAC;AACtD,OAAO,KAAK,SAAS,MAAM,qCAAqC,CAAC;AACjE,OAAO,KAAK,WAAW,MAAM,+BAA+B,CAAC;AAC7D,OAAO,EACL,OAAO,EACP,iBAAiB,EACjB,oBAAoB,EACpB,iCAAiC,GAClC,MAAM,sCAAsC,CAAC;AAC9C,OAAO,EAAC,gBAAgB,EAAC,MAAM,qCAAqC,CAAC;AACrE,OAAO,EAAC,0BAA0B,EAAC,MAAM,iCAAiC,CAAC;AAE3E,0BAA0B,CAAC,aAAa,EAAE,GAAG,EAAE;IAC7C,IAAI,iBAAmG,CAAC;IACxG,UAAU,CAAC,GAAG,EAAE;QACd,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,sCAAsC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAChF,iBAAiB,GAAG,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;QAE9D,iCAAiC,EAAE,CAAC;IACtC,CAAC,CAAC,CAAC;IAEH,SAAS,CAAC,GAAG,EAAE;QACb,OAAO,EAAE,CAAC;IACZ,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,kBAAkB,EAAE,GAAG,EAAE;QAChC,UAAU,CAAC,GAAG,EAAE;YACd,oBAAoB,CAAC,aAAa,CAAC,CAAC;YACpC,gBAAgB,CAAC;gBACf,kBAAkB,EAAE;oBAClB,OAAO,EAAE,IAAI;oBACb,QAAQ,EAAE,IAAI;iBACf;aACF,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,0EAA0E,EAAE,KAAK,IAAI,EAAE;YACxF,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,sCAAsC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACjF,MAAM,EAAC,IAAI,EAAE,KAAK,EAAC,GAAG,MAAM,iBAAiB,EAAE,CAAC;YAChD,KAAK,CAAC,aAAa,GAAG,iCAAiC,CAAC;YAExD,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAAE,CAAC;YAEhC,MAAM,CAAC,MAAM,CAAC,iBAAiB,CAAC,MAAM,EAAE,oDAAoD,CAAC,CAAC;QAChG,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,6EAA6E,EAAE,KAAK,IAAI,EAAE;YAC3F,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,sCAAsC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAChF,MAAM,EAAC,IAAI,EAAE,KAAK,EAAC,GAAG,MAAM,iBAAiB,EAAE,CAAC;YAChD,KAAK,CAAC,aAAa,GAAG,iCAAiC,CAAC;YAExD,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAAE,CAAC;YAEhC,MAAM,CAAC,OAAO,CAAC,iBAAiB,CAAC,MAAM,EAAE,oDAAoD,CAAC,CAAC;QACjG,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,WAAW,EAAE,GAAG,EAAE;QACzB,EAAE,CAAC,iDAAiD,EAAE,KAAK,IAAI,EAAE;YAC/D,oBAAoB,CAAC,aAAa,CAAC,CAAC;YACpC,gBAAgB,CAAC;gBACf,kBAAkB,EAAE;oBAClB,OAAO,EAAE,IAAI;oBACb,QAAQ,EAAE,KAAK;iBAChB;aACF,CAAC,CAAC;YACH,MAAM,EAAC,IAAI,EAAC,GAAG,MAAM,iBAAiB,EAAE,CAAC;YACzC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;QAC7C,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,qCAAqC,EAAE,KAAK,IAAI,EAAE;YACnD,oBAAoB,CAAC,aAAa,CAAC,CAAC;YACpC,gBAAgB,CAAC;gBACf,kBAAkB,EAAE;oBAClB,OAAO,EAAE,IAAI;oBACb,QAAQ,EAAE,IAAI;iBACf;aACF,CAAC,CAAC;YACH,MAAM,EAAC,IAAI,EAAC,GAAG,MAAM,iBAAiB,EAAE,CAAC;YACzC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;QACrD,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,4BAA4B,EAAE,KAAK,IAAI,EAAE;YAC1C,MAAM,EAAC,OAAO,EAAC,GAAG,oBAAoB,CAAC,aAAa,CAAC,CAAC;YACtD,gBAAgB,CAAC;gBACf,kBAAkB,EAAE;oBAClB,OAAO,EAAE,IAAI;oBACb,QAAQ,EAAE,IAAI;iBACf;aACF,CAAC,CAAC;YACH,MAAM,EAAC,IAAI,EAAC,GAAG,MAAM,iBAAiB,EAAE,CAAC;YACzC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;YAEnD,SAAS,CAAC,SAAS,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;YACpE,oBAAoB,CAAC,cAAc,CAAC,CAAC;YACrC,MAAM,CAAC,WAAW,CAAC,CAAC,MAAM,IAAI,CAAC,SAAS,CAAC,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;QAClE,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as Workspace from '../../models/workspace/workspace.js';\nimport * as PanelCommon from '../../panels/common/common.js';\nimport {\n  cleanup,\n  createPatchWidget,\n  createTestFilesystem,\n  initializePersistenceImplForTests,\n} from '../../testing/AiAssistanceHelpers.js';\nimport {updateHostConfig} from '../../testing/EnvironmentHelpers.js';\nimport {describeWithMockConnection} from '../../testing/MockConnection.js';\n\ndescribeWithMockConnection('PatchWidget', () => {\n  let showFreDialogStub: sinon.SinonStub<Parameters<typeof PanelCommon.FreDialog.show>, Promise<boolean>>;\n  beforeEach(() => {\n    Common.Settings.moduleSetting('ai-assistance-patching-fre-completed').set(true);\n    showFreDialogStub = sinon.stub(PanelCommon.FreDialog, 'show');\n\n    initializePersistenceImplForTests();\n  });\n\n  afterEach(() => {\n    cleanup();\n  });\n\n  describe('applyToWorkspace', () => {\n    beforeEach(() => {\n      createTestFilesystem('file://test');\n      updateHostConfig({\n        devToolsFreestyler: {\n          enabled: true,\n          patching: true,\n        },\n      });\n    });\n\n    it('should show FRE dialog on applyToWorkspace click if the setting is false', async () => {\n      Common.Settings.moduleSetting('ai-assistance-patching-fre-completed').set(false);\n      const {view, panel} = await createPatchWidget();\n      panel.changeSummary = 'body { background-color: red; }';\n\n      view.input.onApplyToWorkspace();\n\n      assert.isTrue(showFreDialogStub.called, 'Expected FreDialog to be shown but it\\'s not shown');\n    });\n\n    it('should not show FRE dialog on applyToWorkspace click if the setting is true', async () => {\n      Common.Settings.moduleSetting('ai-assistance-patching-fre-completed').set(true);\n      const {view, panel} = await createPatchWidget();\n      panel.changeSummary = 'body { background-color: red; }';\n\n      view.input.onApplyToWorkspace();\n\n      assert.isFalse(showFreDialogStub.called, 'Expected FreDialog to be not shown but it\\'s shown');\n    });\n  });\n\n  describe('workspace', () => {\n    it('does not report a workspace project if disabled', async () => {\n      createTestFilesystem('file://test');\n      updateHostConfig({\n        devToolsFreestyler: {\n          enabled: true,\n          patching: false,\n        },\n      });\n      const {view} = await createPatchWidget();\n      assert.isUndefined(view.input.projectName);\n    });\n\n    it('reports a current workspace project', async () => {\n      createTestFilesystem('file://test');\n      updateHostConfig({\n        devToolsFreestyler: {\n          enabled: true,\n          patching: true,\n        },\n      });\n      const {view} = await createPatchWidget();\n      assert.strictEqual(view.input.projectName, 'test');\n    });\n\n    it('reports an updated project', async () => {\n      const {project} = createTestFilesystem('file://test');\n      updateHostConfig({\n        devToolsFreestyler: {\n          enabled: true,\n          patching: true,\n        },\n      });\n      const {view} = await createPatchWidget();\n      assert.strictEqual(view.input.projectName, 'test');\n\n      Workspace.Workspace.WorkspaceImpl.instance().removeProject(project);\n      createTestFilesystem('file://test2');\n      assert.strictEqual((await view.nextInput).projectName, 'test2');\n    });\n  });\n});\n"]}