{"version":3,"file":"injected.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/recorder/injected.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type {DevToolsRecorder} from './injected/injected.js';\nimport type {Schema} from './models/models.js';\n\ndescribe('Injected', () => {\n  let iframe: HTMLIFrameElement|undefined;\n\n  async function createSandbox(): Promise<Window> {\n    const url = new URL('./injected/injected.generated.js', import.meta.url);\n\n    iframe = document.createElement('iframe');\n    const {promise, resolve} = Promise.withResolvers();\n    iframe.src = new URL('../../ui/components/docs/recorder_injected/basic.html', import.meta.url).toString();\n    iframe.onload = resolve;\n    document.body.append(iframe);\n    await promise;\n    const iframeDocument = iframe.contentDocument!;\n    {\n      const {promise, resolve} = Promise.withResolvers();\n      const script = iframeDocument.createElement('script');\n      script.src = url.toString();\n      script.onload = resolve;\n      iframeDocument.body.append(script);\n      await promise;\n    }\n    const iframeWindow = iframe.contentWindow!;\n    {\n      (iframeWindow.DevToolsRecorder as DevToolsRecorder)\n          .startRecording(\n              {\n                // We don't have the access to the actual bindings here. Therefore, the test assumes\n                // that the markup is explicitly annotated with the following attributes.\n                getAccessibleName: (element: Node) => {\n                  if (!('getAttribute' in element)) {\n                    return '';\n                  }\n                  return (element as Element).getAttribute('aria-name') || '';\n                },\n                getAccessibleRole: (element: Node) => {\n                  if (!('getAttribute' in element)) {\n                    return 'generic';\n                  }\n                  return (element as Element).getAttribute('aria-role') || '';\n                },\n              },\n              {\n                debug: false,\n                allowUntrustedEvents: true,\n                selectorTypesToRecord: [\n                  'xpath',\n                  'css',\n                  'text',\n                  'aria',\n                  'pierce',\n                ] as Schema.SelectorType[],\n              },\n          );\n    }\n\n    return iframeWindow;\n  }\n\n  afterEach(() => {\n    iframe?.remove();\n  });\n\n  it('should get selectors for an element', async () => {\n    const window = await createSandbox();\n    const selectors = window.DevToolsRecorder.recordingClientForTesting.getSelectors(\n        window.document.querySelector('#buttonNoARIA')!,\n    );\n    assert.deepEqual(selectors, [\n      [\n        '#buttonNoARIA',\n      ],\n      [\n        'xpath///*[@id=\"buttonNoARIA\"]',\n      ],\n      [\n        'pierce/#buttonNoARIA',\n      ]\n    ]);\n  });\n});\n"]}